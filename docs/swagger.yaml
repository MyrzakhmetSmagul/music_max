basePath: /api/v1
definitions:
  model.Description:
    properties:
      description:
        type: string
    type: object
  model.LyricsResponse:
    properties:
      group:
        type: string
      limit:
        type: integer
      page:
        type: integer
      song:
        type: string
      text:
        items:
          type: string
        type: array
    type: object
  model.SongPatchRequest:
    properties:
      group:
        type: string
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
  model.SongRequest:
    properties:
      group:
        type: string
      song:
        type: string
    type: object
  model.SongResponse:
    properties:
      group:
        type: string
      id:
        type: string
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
    type: object
  model.SongsResponse:
    properties:
      limit:
        type: integer
      page:
        type: integer
      songs:
        items:
          $ref: '#/definitions/model.SongResponse'
        type: array
    type: object
host: localhost:3030
info:
  contact:
    email: smagulmyrzakhmet@gmail.com
    name: Developer
  description: This is a sample server for music management.
  title: Music API
  version: "1.0"
paths:
  /songs:
    get:
      description: |-
        Получить песни из библиотеки. Можно фильтровать по всем полям кроме id
        структуры. Есть пагинация, если не устанавливать страницу
        и лимит на количество песен будут использованы стандартные значения.
      parameters:
      - description: Номер страницы
        in: query
        name: page
        type: string
      - description: Лимит на количество элементов на одной странице
        in: query
        name: limit
        type: string
      - description: Название песни, фильтрация без учета регистра
        in: query
        name: song
        type: string
      - description: Имя исполнителя или название группы, фильтрация без учета регистра
        in: query
        name: group
        type: string
      - description: Ссылка, фильтрация с учетом регистра
        in: query
        name: link
        type: string
      - description: Дата выпуска с этой даты включительно
        in: query
        name: startDate
        type: string
      - description: Дата выпуска до этой даты включительно
        in: query
        name: endDate
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список песен с пагинацией и фильтрами
          schema:
            $ref: '#/definitions/model.SongsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Description'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Description'
      summary: Получить песни из библиотеки
      tags:
      - Songs
    post:
      description: Добавить песню в библиотеку
      parameters:
      - description: Тело запроса
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/model.SongRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Description'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Description'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Description'
      summary: Добавить песню в библиотеку
      tags:
      - Songs
  /songs/{id}:
    delete:
      description: Удалить песню из библиотеки по id
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Description'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Description'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Description'
      summary: Удалить песню из библиотеки
      tags:
      - Songs
    patch:
      description: Изменить данные песни
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: string
      - description: Тело запроса
        in: body
        name: songInfo
        required: true
        schema:
          $ref: '#/definitions/model.SongPatchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Description'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Description'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Description'
      summary: Изменить данные песни
      tags:
      - Songs
  /songs/{id}/lyrics:
    get:
      description: Получить текст песни по id
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Текст песни с пагинацией по куплетам
          schema:
            $ref: '#/definitions/model.LyricsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Description'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Description'
      summary: Получить текст песни
      tags:
      - Songs
swagger: "2.0"
